// jsc needs to move the idl code to scriptcorelib level.
// should jsc support a compilation of chromium idl?

// https://developer.chrome.com/apps/identity
// https://developer.chrome.com/apps/wallpaper


// http://developer.chrome.com/apps/api_index.html
// http://developer.chrome.com/extensions/bookmarks.html

interface chrome.ChromeEventTarget<T, T2, T3>
{
	void addListener(function<T, T2, T3> callback);
};



// http://src.chromium.org/viewvc/chrome/trunk/src/chrome/common/extensions/api/web_request.json
// X:\jsc.svn\examples\javascript\chrome\extensions\ChromeExtensionPreShadow\ChromeExtensionPreShadow\Application.cs
// https://developer.chrome.com/extensions/webNavigation#event-onCommitted
// http://src.chromium.org/viewvc/chrome/trunk/src/chrome/common/extensions/api/web_navigation.json


// not a real type?
interface chrome.webNavigationCommitedArgs
{
	attribute chrome.TabIdInteger tabId;
	attribute string url;
	attribute int processId;
	attribute int frameId;
	attribute string transitionType;
	attribute string transitionQualifiers;
	attribute double timeStamp;
};

// http://sharpkit.net/help/SharpKit.Google.Chrome/SharpKit.Google.Chrome/webRequest/

// "permissions": [
//   "webNavigation"
interface chrome.webNavigation
{
	event static attribute chrome.ChromeEventTarget<chrome.webNavigationCommitedArgs> onCommitted;
};




// http://developer.chrome.com/extensions/tabs.html#type-Tab
// rename to TabKey as we use such naming for DLinq?
interface chrome.TabIdInteger
{
};


interface chrome.Tab
{
	attribute chrome.TabIdInteger        id;


	attribute int        index ;

	// WindowKey?
	attribute int        windowId ;

	attribute boolean        highlighted;
	attribute boolean        active;
	attribute boolean        pinned;


	// The URL the tab is displaying. This property is only present if the extension's manifest includes the "tabs" permission.
	attribute string        url;

	// The title of the tab. This property is only present if the extension's manifest includes the "tabs" permission.
	attribute string        title;

	// The URL of the tab's favicon. This property is only present if the extension's manifest includes the "tabs" permission. It may also be an empty string if the tab is loading.
	attribute string        favIconUrl;

	// Either loading or complete.
	attribute string        status;



	attribute int        width;
	attribute int        height;
};


// 'tabs' is only allowed for extensions and legacy packaged apps, and this is a packaged app.

// There were warnings when trying to install this extension:
//'fullscreen' is only allowed for packaged apps, and this is a extension.
//'pointerLock' is only allowed for packaged apps, and this is a extension.
//'socket' is only allowed for packaged apps, and this is a extension.
//'webview' is only allowed for packaged apps, and this is a extension.

// http://sharpkit.net/help/SharpKit.Google.Chrome/SharpKit.Google.Chrome/tabs/

interface chrome.tabs
{
	// http://src.chromium.org/viewvc/chrome/trunk/src/chrome/common/extensions/api/browser.idl
	// http://stackoverflow.com/questions/6497548/chrome-extension-make-it-run-every-page-load

	event static attribute chrome.ChromeEventTarget<chrome.Tab> onCreated;
	event static attribute chrome.ChromeEventTarget<int, any, chrome.Tab> onUpdated;
	event static attribute chrome.ChromeEventTarget<int, any> onMoved;

	event static attribute chrome.ChromeEventTarget<any> onActivated;
	//event static attribute chrome.ChromeEventTarget<{tabId, windowId}> onActivated;

	event static attribute chrome.ChromeEventTarget<any> onHighlighted;
	event static attribute chrome.ChromeEventTarget<int, any> onDetached;
	event static attribute chrome.ChromeEventTarget<int, any> onAttached;
	event static attribute chrome.ChromeEventTarget<int, any> onRemoved;
	event static attribute chrome.ChromeEventTarget<int, int> onReplaced;

	async static void create(any createProperties, function<chrome.Tab> callback);

	//static extension runtime.Port chrome.tabs.connect(chrome.TabIdInteger tabId, object connectInfo)
	static extension chrome.Port connect(chrome.TabIdInteger tabId, any connectInfo);
	static extension chrome.Port connect(chrome.TabIdInteger tabId);

	async static void get(int tabId, function<chrome.Tab> callback);

	async static void getCurrent(function<chrome.Tab> callback);
	async static extension void sendMessage(chrome.TabIdInteger tabId, any message, function<any> callback);
	async static extension void duplicate(chrome.TabIdInteger tabId, function<chrome.Tab> callback);

	async static extension void executeScript(chrome.TabIdInteger tabId, any details, function<any> callback);




	// X:\jsc.svn\examples\javascript\chrome\extensions\ChromeExtensionHopToTab\ChromeExtensionHopToTab\Application.cs
	async static extension void insertCSS(chrome.TabIdInteger tabId, any details, function<any> callback);
};



// X:\jsc.svn\examples\javascript\chrome\extensions\ChromeExtensionWithWorker\ChromeExtensionWithWorker\Application.cs
// http://developer.chrome.com/extensions/pageAction.html#method-show
interface chrome.pageAction 
{
	event static attribute chrome.ChromeEventTarget<chrome.Tab> onClicked;

	static extension void show(chrome.TabIdInteger tabId);
	static extension void hide(chrome.TabIdInteger tabId);

	static  void setPopup(any details);
	static  void setIcon(any details, function callback);
	static  void setTitle(any details);
	//static extension void setTitle({tabId, title} details);
};



// https://code.google.com/p/chromium/codesearch#chromium/src/chrome/common/extensions/api/notifications.idl
// static or module?
// namespace notifications {
// does jsc support namespace keyword? we should support module?
// once we do can we remove the requirement to be referenced from html files?
interface chrome.notifications
{
	event static attribute chrome.ChromeEventTarget<string, boolean> onClosed;
	event static attribute chrome.ChromeEventTarget<string> onClicked;
	event static attribute chrome.ChromeEventTarget<string, int> onButtonClicked;


	async static void create(string notificationId, any options, function<string> callback);
	async static void update(string notificationId, any options, function<boolean> callback);

	static void clear(string notificationId, function callback);
};

// http://developer.chrome.com/apps/runtime.html
interface chrome.runtime
{
	static attribute string        lastError;
	static attribute string        id;

	
	// http://stackoverflow.com/questions/2963260/how-do-i-auto-reload-a-chrome-extension-im-developing
	static void reload();

	async static void getPackageDirectoryEntry(function<any> callback);
	//async static void postMessage(string id, any message, function<any> callback);

	 static chrome.Port connect(string id);

	event static attribute chrome.ChromeEventTarget onStartup;
	event static attribute chrome.ChromeEventTarget onInstalled;
	event static attribute chrome.ChromeEventTarget onSuspend;
	event static attribute chrome.ChromeEventTarget onSuspendCanceled;

	// tested by?
	event static attribute chrome.ChromeEventTarget<any> onUpdateAvailable;


	// X:\jsc.svn\examples\javascript\chrome\extensions\ChromeExtensionWithWorker\ChromeExtensionWithWorker\Application.cs
	event static attribute chrome.ChromeEventTarget<chrome.Port> onConnect;
	event static attribute chrome.ChromeEventTarget<chrome.Port> onConnectExternal;

	event static attribute chrome.ChromeEventTarget<any, any, any> onMessage;
	event static attribute chrome.ChromeEventTarget<any, any, any> onMessageExternal;
	event static attribute chrome.ChromeEventTarget<any> onRestartRequired;
};

// http://developer.chrome.com/extensions/runtime.html#type-Port
interface chrome.Port 
{
	attribute string name;

	attribute chrome.ChromeEventTarget onDisconnect;
	attribute chrome.ChromeEventTarget onMessage ;
	attribute chrome.MessageSender sender;

	void postMessage(any message);
};

interface chrome.MessageSender 
{
	attribute string id;
};


interface chrome.app
{
	// http://developer.chrome.com/trunk/apps/app.window.html

	// https://code.google.com/p/chromium/issues/detail?id=129960
	// this does not seem to work at all
	static attribute boolean        isInstalled;
};




// http://dev.chromium.org/developers/design-documents/aura/aura-and-shell-dependencies
// http://stackoverflow.com/questions/16255325/what-does-only-supported-in-ash-mean
// http://developer.chrome.com/apps/app.window.html
// https://code.google.com/p/chromium/issues/detail?id=260810
interface chrome.app.window
{
	static chrome.AppWindow current();



	// https://code.google.com/p/chromium/codesearch#chromium/src/ui/views/widget/widget_aura_utils.cc
	// transparent_background
	// alphaEnabled
	// 20140815
	// alpha_enabled

	// chrome40 still does not allow stable users to use it?
	async static void create(string url, any options, function<chrome.AppWindow> callback);
};


// http://src.chromium.org/viewvc/chrome/trunk/src/chrome/browser/extensions/api/app_window/app_window_api.cc
// https://code.google.com/p/chromium/codesearch#chromium/src/chrome/common/extensions/api/app_window.idl
// http://developer.chrome.com/trunk/apps/app.window.html#type-AppWindow
// http://src.chromium.org/viewvc/chrome/trunk/src/chrome/common/extensions/api/app_window.idl
//[Constructor]
interface chrome.AppWindow 
{
	// can we have a jsc proxy for live debgging?
	// live edit and continue loop
	// where jsc provides diff or restarts the window?

	// there is a whitelist>
	// https://codereview.chromium.org/282293005/diff/1/chrome/browser/extensions/api/app_current_window_internal/app_current_window_internal_api.cc
	// http://stackoverflow.com/questions/19388333/is-it-possible-to-add-a-shadow-to-the-outside-of-a-chrome-app-window

	// tracked by
	// https://code.google.com/p/chromium/issues/detail?id=260810#c30

	// https://code.google.com/p/chromium/codesearch#chromium/src/ui/views/widget/widget_hwnd_utils.cc&sq=package:chromium&type=cs&l=51

  // Layered windows do not work with Aura. They are basically incompatible
  // with Direct3D surfaces. Officially, it should be impossible to achieve
  // per-pixel alpha compositing with the desktop and 3D acceleration but it
  // has been discovered that since Vista There is a secret handshake between
  // user32 and the DMW. If things are set up just right DMW gets out of the
  // way; it does not create a backbuffer and simply blends our D3D surface
  // and the desktop background. The handshake is as follows:
  // 1- Use D3D9Ex to create device/swapchain, etc. You need D3DFMT_A8R8G8B8.
  // 2- The window must have WS_EX_COMPOSITED in the extended style.
  // 3- The window must have WS_POPUP in its style.
  // 4- The windows must not have WM_SIZEBOX, WS_THICKFRAME or WS_CAPTION in its
  //    style.
  // 5- When the window is created but before it is presented, call
  //    DwmExtendFrameIntoClientArea passing -1 as the margins.
	
	// chromium idl seems to mark em static?
	void focus();

	void fullscreen();
	boolean isFullscreen();

	void restore();


	void minimize();
	void maximize();

	// param naming?
	void moveTo(int x, int y);
	void resizeTo(int width, int height);

	void drawAttention();
	void clearAttention();

	void close();

	void show();
	void hide();
	

	// permission
	// alwaysOnTopWindows
	void setAlwaysOnTop(boolean alwaysOnTop);
	void setVisibleOnAllWorkspaces(boolean alwaysVisible);

	// https://code.google.com/p/chromium/issues/detail?id=260810
	boolean alphaEnabled();



	readonly attribute WindowProxy? contentWindow;


	attribute chrome.ChromeEventTarget onBoundsChanged;
	attribute chrome.ChromeEventTarget onClosed;
	attribute chrome.ChromeEventTarget onFullscreened;
	attribute chrome.ChromeEventTarget onMaximized;
	attribute chrome.ChromeEventTarget onMinimized;
	attribute chrome.ChromeEventTarget onRestored;

	// event keyword?
	// http://src.chromium.org/viewvc/chrome/trunk/src/chrome/common/extensions/api/app_window.idl?r1=284026&r2=284025&pathrev=284026

	attribute chrome.ChromeEventTarget onWindowFirstShown;

	// tested by?
	// X:\jsc.svn\examples\javascript\chrome\apps\ChomeAlphaAppWindow\ChomeAlphaAppWindow\Application.cs
	attribute chrome.ChromeEventTarget onAlphaEnabledChanged;


};

// https://developer.mozilla.org/en-US/docs/Web/API/FileEntry
// reverese engineered
// http://www.mosync.com/files/imports/doxygen/latest/html5/fileentry.md.html
interface chrome.app.runtime.FileEntry
{
	attribute any   filesystem;

	attribute string   fullPath;

	attribute any   name;

	attribute boolean   isDirectory;

	attribute boolean   isFile;

	attribute any   createWriter;

	// http://www.w3.org/TR/file-system-api/#the-fileentry-interface
	void file(function<any> successCallback);

	attribute any   getMetadata;

	attribute any   moveTo;

	
	attribute any   copyTo;


	// returns null??
	string   toURL();

	attribute any   remove;

	attribute any   getParent;
};

// http://developer.chrome.com/apps/fileSystem.html
interface chrome.app.runtime.LaunchDataItem
{
	attribute FileEntry entry;
	attribute string type;
};

interface chrome.app.runtime.LaunchData
{
	attribute string id;

	// The file entries for the onLaunched event triggered by a matching file handler in the file_handlers manifest key.
	attribute chrome.app.runtime.LaunchDataItem[] items;
};



// http://developer.chrome.com/trunk/apps/app.runtime.html
interface chrome.app.runtime
{
	static attribute string        id  ;

	// https://developer.chrome.com/apps/app_lifecycle
	event static attribute chrome.ChromeEventTarget<chrome.app.runtime.LaunchData> onLaunched;
	//event static attribute chrome.ChromeEventTarget onLaunched;

	event static attribute chrome.ChromeEventTarget onRestarted;

	// <appview> element.
	// https://developer.chrome.com/apps/app_runtime#event-onEmbedRequested
	event static attribute chrome.ChromeEventTarget onEmbedRequested;


};


interface chrome.CreateInfo 
{
	attribute chrome.socketId socketId;
};

interface chrome.WriteInfo 
{
	attribute long bytesWritten;
};

interface chrome.ReadInfo 
{
	attribute long resultCode;
	attribute ArrayBuffer data;
};

interface chrome.RecvFromInfo 
{
	attribute long resultCode;
	attribute long port;
	attribute DOMString address;
	attribute ArrayBuffer data;
};


interface chrome.AcceptInfo 
{
	attribute long resultCode;
	attribute chrome.socketId socketId;
};



// not a real type?
interface chrome.onReceiveInfo 
{
	attribute chrome.socketId socketId;
	attribute ArrayBuffer data;

	attribute long remotePort;
	attribute string remoteAddress;
};


// dictionary
interface chrome.SocketProperties 
{
	//attribute boolean persistent = false;
	attribute boolean persistent;
	attribute string name;
	//attribute long bufferSize = 4096;
	attribute long bufferSize;
};

// https://developer.chrome.com/apps/sockets_udp
// Stable since Chrome 33. 
interface chrome.sockets.udp
{
	// http://laclefyoshi.blogspot.com/2012/05/using-socket-api-with-google-chrome.html
	// not defined???
	// http://superuser.com/questions/522428/performing-dns-queries-via-javascript-from-chrome-app

	// what do we need in manifest.json?

	// chrome.SocketProperties 
	async static void create(any properties, function<chrome.CreateInfo> callback);

	// bind − chrome.sockets.udp.bind(integer socketId, string address, integer port, function callback)
	//async static extension void bind(chrome.socketId socketId, string address, int port, function<int> callback);
	async static void bind(chrome.socketId socketId, string address, int port, function<int> callback);

	// joinGroup − chrome.sockets.udp.joinGroup(integer socketId, string address, function callback)
	async static void joinGroup(chrome.socketId socketId, string address, function<int> callback);

	// chrome.sockets.udp.onReceiveError.addListener(function callback)
	event static attribute chrome.ChromeEventTarget<chrome.onReceiveInfo> onReceive;
	event static attribute chrome.ChromeEventTarget<any> onReceiveError;
};

interface chrome.socketId 
	// make it an enum	
	//: int 
{ 

};

// https://developer.chrome.com/apps/sockets_tcpServer
// https://sites.google.com/a/jsc-solutions.net/backlog/knowledge-base/2015/201503/20150305/chrome

[Obsolete]
interface chrome.socket
{
	// X:\jsc.svn\examples\javascript\chrome\apps\MulticastListenExperiment\MulticastListenExperiment\Application.cs
	// http://developer.chrome.com/trunk/apps/socket.html#method-listen

	async static extension void listen (chrome.socketId socketId, string address, int port, int backlog, function<int> callback);
	async static extension void accept(chrome.socketId socketId, function<chrome.AcceptInfo> callback);
	// void create(SocketType type, CreateOptions options, function callback);

	// https://code.google.com/p/chromium/issues/detail?id=246872
	// http://src.chromium.org/svn/branches/1229_12/src/chrome/common/extensions/docs/apps/socket.html#type-socket.CreateOptions
	// https://code.google.com/p/chromium/issues/detail?id=173533
	// https://groups.google.com/a/chromium.org/forum/#!topic/chromium-discuss/AMitTmWh09Q
	// http://src.chromium.org/viewvc/chrome/trunk/src/net/socket/server_socket.h?revision=210146&pathrev=210147
	async static void create(string type, any options, function<chrome.CreateInfo> callback);

	static extension void disconnect(chrome.socketId socketId);
	static extension void destroy(chrome.socketId socketId);


	async static extension void setMulticastTimeToLive(chrome.socketId socketId, int ttl, function<int> callback);

	async static extension void bind(chrome.socketId socketId, string address, int port, function<int> callback);

	async static extension void joinGroup(chrome.socketId socketId, string address, function<int> callback);
	async static extension void recvFrom(chrome.socketId socketId, int bufferSize, function<chrome.RecvFromInfo> callback);

	async static extension void sendTo(chrome.socketId socketId, any data, string address, int port, function<chrome.WriteInfo> callback);




	async static extension void read(chrome.socketId socketId, function<chrome.ReadInfo> callback);
	async static extension void read(chrome.socketId socketId, int bufferSize, function<chrome.ReadInfo> callback);


	async static extension void write(chrome.socketId socketId, ArrayBuffer data, function<chrome.WriteInfo> callback);


	// tested by?
	// this looks like a property!
	// Task<NetworkInterface[]> NetworkList
	//  Note: Starting with Chrome 33, this API is deprecated in favor of the sockets.udp, sockets.tcp 
	// tested by?
	// X:\jsc.svn\examples\javascript\chrome\apps\ChromeNetworkInterfaces\ChromeNetworkInterfaces\Application.cs
	async static void getNetworkList(function<sequence<chrome.NetworkInterface>> callback);

};

// http://developer.chrome.com/trunk/apps/socket.html#type-NetworkInterface
// https://developer.chrome.com/apps/socket#method-getNetworkList
interface chrome.NetworkInterface 
{
	attribute DOMString name ;
	attribute DOMString address ;
	attribute int prefixLength;
};



// cannot find contextmenu idl
// http://src.chromium.org/viewvc/chrome/trunk/src/chrome/common/extensions/api/context_menus.json
// tested by
// X:\jsc.svn\examples\javascript\chrome\extensions\ChromeExtensionContextMenu\ChromeExtensionContextMenu\Application.cs


// not a real type? OnClickData
interface chrome.ContextMenuClickArgs
{
	// X:\jsc.svn\examples\javascript\chrome\extensions\ChromeExtensionContextMenu\ChromeExtensionContextMenu\Application.cs

	attribute boolean wasChecked;
	attribute boolean checked;
	attribute boolean editable;

	attribute DOMString pageUrl ;

	// string or int ?
	attribute any menuItemId ;

	// image
	attribute DOMString linkUrl;
	attribute DOMString srcUrl;




	// selection
	attribute DOMString selectionText ;



};


interface chrome.contextMenus 
{
	// async static void create(object createProperties, function<any> callback);
	async static void create(any createProperties, function<any> callback);


	// could we define the arg type inline?
	event static attribute chrome.ChromeEventTarget<chrome.ContextMenuClickArgs, chrome.Tab> onClicked;
};

// what if we allowed urls to behave like comments? jscIDL?
// http://src.chromium.org/viewvc/chrome/trunk/src/chrome/common/extensions/api/system_indicator.idl
// not actually supported!
// seems like it is coming to chromeOS but not available for testing as of 2014
// https://code.google.com/p/chromium/issues/detail?id=142450&q=systemIndicator&colspec=ID%20Pri%20M%20Iteration%20ReleaseBlock%20Cr%20Status%20Owner%20Summary%20OS%20Modified
// Permission 'systemIndicator' is unknown or URL pattern is malformed.
interface chrome.systemIndicator 
{
	// dropped?
	// tested by?

	static void enable();
	static void disable();
	
	event static attribute chrome.ChromeEventTarget onClicked;
};




//
//interface chrome.StorageArea
//{
//	void get(string key, function callback);
//	void getBytesInUse(string key, function callback);
//	void remove(string key, function callback);
//	void clear(function callback);
//
//	// set({'value': theValue},
//	void set(object items, function callback);
//};
//
//
//// http://developer.chrome.com/apps/storage.html
//interface chrome.__storage
//{
//	// tested by X:\jsc.internal.svn\examples\javascript\chrome\ChromeMyJscSolutionsNet\ChromeMyJscSolutionsNet\Application.cs
//
//	attribute chrome.StorageArea sync;
//	attribute chrome.StorageArea local;
//
//	attribute ChromeEventTarget onChanged;
//};
//


//
//
//
//







//
//
//
//
//
//
//
//
//// does this type even exist?
//interface WebstoreModule
//{
//	// https://developers.google.com/chrome/web-store/docs/inline_installation
//	void install(string url, function successCallback, function failureCallback);
//
//};
//


//
//
//
//
//interface BookmarksModule
//{
//	void getTree(function callback);
//};
//
//
//

//
//
//
//// does this type use namespace?
//[Constructor]
//interface BookmarkTreeNode 
//{
//	attribute long index;
//	attribute DOMString title;
//	attribute DOMString url;
//	attribute DOMString id;
//	attribute DOMString parentId;
//	attribute BookmarkTreeNode[] children;
//
//
//};
