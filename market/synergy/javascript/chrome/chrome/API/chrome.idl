// c

// http://developer.chrome.com/extensions/bookmarks.html


interface chrome
{ 
	static attribute WebstoreModule			webstore;
	static attribute AppModule				app;
	static attribute BookmarksModule        bookmarks;
	static attribute SocketModule			socket;
	static attribute NotificationsModule    notifications;
	static attribute TabsModule				tabs;
	static attribute RuntimeModule			runtime;

	// can jsc help us define it inline?
	//static attribute storage {
	//	attribute ChromeEventTarget onChanged;
	//};
	
	static attribute chrome.__storage		storage;

};

interface chrome.StorageArea
{
	void get(string key, function callback);
	void getBytesInUse(string key, function callback);
	void remove(string key, function callback);
	void clear(function callback);

	// set({'value': theValue},
	void set(object items, function callback);
};


// http://developer.chrome.com/apps/storage.html
interface chrome.__storage
{
	// tested by X:\jsc.internal.svn\examples\javascript\chrome\ChromeMyJscSolutionsNet\ChromeMyJscSolutionsNet\Application.cs

	attribute chrome.StorageArea sync;
	attribute chrome.StorageArea local;

	attribute ChromeEventTarget onChanged;
};

// http://developer.chrome.com/apps/runtime.html
interface RuntimeModule
{

	
	// http://stackoverflow.com/questions/2963260/how-do-i-auto-reload-a-chrome-extension-im-developing
	void reload();

	void getPackageDirectoryEntry(function callback);

	attribute ChromeEventTarget onStartup;
	attribute ChromeEventTarget onInstalled;
	attribute ChromeEventTarget onSuspend;
	attribute ChromeEventTarget onSuspendCanceled;
	attribute ChromeEventTarget onUpdateAvailable;
	attribute ChromeEventTarget onConnect;
	attribute ChromeEventTarget onConnectExternal;
	attribute ChromeEventTarget onMessage;
	attribute ChromeEventTarget onMessageExternal;
	attribute ChromeEventTarget onRestartRequired;
};



interface Tab
{
	attribute int        id  ;
	attribute int        windowId ;

};

interface TabsModule
{
	void create(any createProperties, function callback);
};

interface ChromeEventTarget
{
	void addListener(function callback);
};


// http://developer.chrome.com/extensions/notifications.html
interface NotificationsModule
{
	attribute ChromeEventTarget onClosed;
	attribute ChromeEventTarget onClicked;
	attribute ChromeEventTarget onButtonClicked;

	void create(string notificationId, any options, function callback);
	void update(string notificationId, any options, function callback);
};



// does this type even exist?
interface SocketModule
{

	// http://developer.chrome.com/trunk/apps/socket.html#method-listen

	void listen (int socketId, string address, int port, int backlog, function callback);
	void accept(int socketId, function callback);
	// void create(SocketType type, CreateOptions options, function callback);
	void create(string type, any options, function callback);

	void setMulticastTimeToLive(int socketId, int ttl, function callback);
	void bind(int socketId, string address, int port, function callback);
	void joinGroup(int socketId, string address, function callback);
	void recvFrom(int socketId, int bufferSize, function callback);
	void sendTo(int socketId, any data, string address, int port, function callback);

};

// dictionary?
interface RecvFromInfo 
{
	attribute long resultCode;
	attribute long port;
	attribute DOMString address;
	attribute ArrayBuffer data;
};

interface CreateInfo 
{
	attribute long socketId;
};




// http://developer.chrome.com/trunk/apps/socket.html#type-SocketInfo
// Obsolete?
[Constructor]
interface SocketInfo 
{
	attribute DOMString peerAddress;
	attribute long peerPort;

	attribute DOMString localAddress;
	attribute long localPort;

	attribute boolean connected;
};

// http://developer.chrome.com/trunk/apps/socket.html#type-NetworkInterface
[Constructor]
interface NetworkInterface 
{
	attribute DOMString name ;
	attribute DOMString address ;
};

[Constructor]
interface ReadInfo 
{
	attribute long resultCode;
	attribute ArrayBufferView data;
};

[Constructor]
interface AcceptInfo 
{
	attribute long resultCode;
	attribute long socketId;
};

interface WriteInfo 
{
	attribute long bytesWritten;
};








// does this type even exist?
interface WebstoreModule
{
	// https://developers.google.com/chrome/web-store/docs/inline_installation
	void install(string url, function successCallback, function failureCallback);

};

// does this type even exist?
interface AppModule
{
	// http://developer.chrome.com/trunk/apps/app.window.html

	// https://code.google.com/p/chromium/issues/detail?id=129960
	// this does not seem to work at all
	attribute boolean        isInstalled;

	attribute AppWindowModule        window;
	attribute AppRuntimeModule			runtime;
};

// http://developer.chrome.com/trunk/apps/app.runtime.html
interface AppRuntimeModule
{
	attribute string        id  ;

	attribute ChromeEventTarget onLaunched;
	attribute ChromeEventTarget onRestarted;


};

// http://dev.chromium.org/developers/design-documents/aura/aura-and-shell-dependencies
// http://stackoverflow.com/questions/16255325/what-does-only-supported-in-ash-mean
// http://developer.chrome.com/apps/app.window.html
interface AppWindowModule
{
	AppWindow current();


	void create(string url, any options, function callback);
};


interface BookmarksModule
{
	void getTree(function callback);
};



// http://developer.chrome.com/trunk/apps/app.window.html#type-AppWindow
// http://src.chromium.org/viewvc/chrome/trunk/src/chrome/common/extensions/api/app_window.idl
[Constructor]
interface AppWindow 
{

	void close();
	void restore();
	void moveTo();
	void clearAttention();
	void minimize();
	void drawAttention();
	void focus();
	void resizeTo();
	void maximize();

	readonly attribute WindowProxy? contentWindow;


	attribute ChromeEventTarget onBoundsChanged;
	attribute ChromeEventTarget onClosed;
	attribute ChromeEventTarget onFullscreened;
	attribute ChromeEventTarget onMaximized;
	attribute ChromeEventTarget onMinimized;
	attribute ChromeEventTarget onRestored;

};



// does this type use namespace?
[Constructor]
interface BookmarkTreeNode 
{
	attribute long index;
	attribute DOMString title;
	attribute DOMString url;
	attribute DOMString id;
	attribute DOMString parentId;
	attribute BookmarkTreeNode[] children;


};
