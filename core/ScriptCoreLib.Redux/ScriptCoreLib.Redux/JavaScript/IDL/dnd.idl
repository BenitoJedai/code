interface DataTransfer {
           attribute DOMString dropEffect;
           attribute DOMString effectAllowed;

  readonly attribute DataTransferItemList items;

  void setDragImage(Element image, long x, long y);
  void addElement(Element element);

  /* old interface */
  readonly attribute DOMStringList types;
  DOMString getData(DOMString format);
  void setData(DOMString format, DOMString data);
  void clearData(optional DOMString format);
  readonly attribute FileList files;
};

interface DataTransferItemList {
  readonly attribute unsigned long length;
  getter DataTransferItem (unsigned long index);
  deleter void (unsigned long index);
  void clear();

  DataTransferItem? add(DOMString data, DOMString type);
  DataTransferItem? add(File data);
};

// http://www.whatwg.org/specs/web-apps/current-work/multipage/dnd.html#dfnReturnLink-0
interface DataTransferItem {
  readonly attribute DOMString kind;
  readonly attribute DOMString type;
  void getAsString(function<string> callback);
  File? getAsFile();
};




[Constructor(DOMString type)]
interface DragEvent : MouseEvent {
  readonly attribute DataTransfer? dataTransfer;
};

