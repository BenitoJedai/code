// Generated by ScriptCoreLib.Alchemy.ExportGenerator
// Clear this file to force code generation.
namespace cmodule.FlashPlasma
{
	using ScriptCoreLib;
	using ScriptCoreLib.ActionScript.flash.utils;
	using ScriptCoreLib.ActionScript.flash.display;
	[global::System.Runtime.CompilerServices.CompilerGenerated]
	[Script(IsNative = true)]
	public class CLibInit
	{
		public void supplyFile(string path, ByteArray data)
		{
		}
		public void putEnv(string key, string value)
		{
		}
		public void setSprite(Sprite sprite)
		{
		}
		public object init()
		{
			return default(object);
		}
	}
}
namespace FlashPlasma.Alchemy
{
	using ScriptCoreLib;
	using ScriptCoreLib.Alchemy.Headers;
	partial class Program
	{
		[global::System.Runtime.CompilerServices.CompilerGenerated]
		static AS3_h._AS3_Val echo(object self, AS3_h._AS3_Val args)
		{
			var __value = FlashPlasma.SharedAlchemy.Plasma.echo();
			return AS3_h.AS3_Ptr(__value);
		}
		[global::System.Runtime.CompilerServices.CompilerGenerated]
		static AS3_h._AS3_Val generatePlasma(object self, AS3_h._AS3_Val args)
		{
			int width;
			int height;
			AS3_h.AS3_ArrayValue(args, "IntType, IntType", __arglist(out width, out height));
			var __value = FlashPlasma.SharedAlchemy.Plasma.generatePlasma(width, height);
			width = default(int);
			height = default(int);
			return AS3_h.AS3_Ptr(__value);
		}
		[global::System.Runtime.CompilerServices.CompilerGenerated]
		static AS3_h._AS3_Val shiftPlasma(object self, AS3_h._AS3_Val args)
		{
			int shift;
			AS3_h.AS3_ArrayValue(args, "IntType", __arglist(out shift));
			var __value = FlashPlasma.SharedAlchemy.Plasma.shiftPlasma(shift);
			shift = default(int);
			return AS3_h.AS3_Ptr(__value);
		}
		[global::System.Runtime.CompilerServices.CompilerGenerated]
		[Script(NoDecoration = true)]
		static int main()
		{
			var __echo = AS3_h.AS3_Function(null, echo);
			var __generatePlasma = AS3_h.AS3_Function(null, generatePlasma);
			var __shiftPlasma = AS3_h.AS3_Function(null, shiftPlasma);
			var __result = AS3_h.AS3_Object("echo: AS3ValType,generatePlasma: AS3ValType,shiftPlasma: AS3ValType", __arglist(__echo,__generatePlasma,__shiftPlasma));
			AS3_h.AS3_Release(__echo);
			AS3_h.AS3_Release(__generatePlasma);
			AS3_h.AS3_Release(__shiftPlasma);
			AS3_h.AS3_LibInit(__result);
			return 0;
		}
	}
}
