[Constructor(double x, double ratio, double a, double fov)]
interface THREE.PerspectiveCamera 
{ 
};

[Constructor()]
interface THREE.Scene 
{ 
	attribute /* Fog */ any        fog;

	 void add(any value);
};

[Constructor(long x, long y, long z)]
interface THREE.Fog 
{ 
};

[Constructor(long x)]
interface THREE.AmbientLight 
{ 
};

[Constructor(long x)]
interface THREE.SpotLight 
{ 
     attribute boolean        castShadow;
     attribute long        shadowCameraNear;
     attribute long        shadowCameraFar;
     attribute long        shadowCameraFov;
     attribute double        shadowMapBias;
     attribute double        shadowMapDarkness;
     attribute long        shadowMapWidth;
     attribute long        shadowMapHeight;
};

[Constructor(long x, long y, long z, long q)]
interface THREE.PlaneGeometry 
{ 
	 void applyMatrix(any value);
};

[Constructor()]
interface THREE.Matrix4 
{ 
	 any makeRotationX(double value);
};

[Constructor(any x)]
interface THREE.MeshLambertMaterial 
{ 
};

[Constructor(any geometry, any material)]
interface THREE.Mesh 
{ 
     attribute boolean        castShadow;
     attribute boolean        receiveShadow;
};

[Constructor()]
interface THREE.WebGLRenderer 
{ 
     attribute boolean        shadowMapEnabled;
     attribute boolean        shadowMapSoft;

	 attribute Element domElement;

	 void setSize(long w, long h);
};
