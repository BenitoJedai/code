using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using java.applet;
using ScriptCoreLib;
using ScriptCoreLib.ActionScript;
using ScriptCoreLib.ActionScript.flash.display;
using ScriptCoreLib.JavaScript.DOM.HTML;
using ScriptCoreLib.JavaScript.Extensions;
using ScriptCoreLib.JavaScript;
using ScriptCoreLib.ActionScript.Extensions;
using java.awt;
using ScriptCoreLib.JavaScript.DOM;
using System.ComponentModel;
using java.awt.@event;
using ScriptCoreLib.JavaScript.Runtime;
using ScriptCoreLib.ActionScript.flash.external;
using Ultra1.Common;

namespace Ultra4
{

	//[Description("OrcasClientScriptApplication. Write javascript, flash and java applets within a C# project.")]

	public sealed class UltraApplication
	{

		public sealed class UltraApplet : Applet, IUltraPolyglot
		{

			public const int DefaultWidth = 500;
			public const int DefaultHeight = 400;

			public class __MouseListener : MouseListener
			{
				public event Action Clicked;

				#region MouseListener Members

				public void mouseClicked(MouseEvent e)
				{
					if (Clicked != null)
						Clicked();
				}

				public void mouseEntered(MouseEvent e)
				{
				}

				public void mouseExited(MouseEvent e)
				{
				}

				public void mousePressed(MouseEvent e)
				{
				}

				public void mouseReleased(MouseEvent e)
				{
				}

				#endregion
			}

			public string Status { get; set; }

			public override void init()
			{
				this.Status = "java";

				base.resize(DefaultWidth, DefaultHeight);
				// creating the java applet

				var c = new __MouseListener();

				c.Clicked +=
					delegate
					{
						if (Clicked != null)
							Clicked();
					};

				this.addMouseListener(c);
			}

			public event Action Clicked;

			static Color GetBlue(double b)
			{
				int u = (int)(0xff * b);

				return new Color(u << 0x100);
			}

			public override void paint(global::java.awt.Graphics g)
			{
				// old school gradient :)

				var h = this.getHeight();
				var w = this.getWidth();

				for (int i = 0; i < h; i++)
				{

					g.setColor(GetBlue(1 - (double)i / (double)h));
					g.drawLine(0, i, w, i);
				}
			}

			public event Action MyLoaded
			{
				add
				{
					value();
				}
				remove
				{

				}
			}
		}



		public sealed class UltraSprite : Sprite, IUltraPolyglot
		{
			public const int DefaultWidth = 500;
			public const int DefaultHeight = 400;

			/*
			__flash__addCallback(b, "add_Clicked")
			__flash__addCallback(b, "add_MyLoaded")
			__flash__addCallback(b, "set_Status")
			 */

			public event Action Clicked;


			public string Status { get; set; }

			public UltraSprite()
			{
				this.Status = "flash";

				// creating the flash object 
				// + stratus
				// + alchemy

				// funny :) i have forgotten how to write anything
				// on flash API ... too much WPF API?
				AddShape(0x7070);
			}

			public void AddShape1(string color)
			{
				if (color == "red")
					AddShape(0xff0000);
				else if (color == "green")
					AddShape(0xff00);
				else
					AddShape(0xff);

			}

			public string AddShape2
			{
				set
				{
					AddShape(0xff);
				}
				get
				{
					return "";
				}
			}

			private void AddShape(uint color)
			{
				var r = new Sprite();

				r.graphics.beginFill(color);
				r.graphics.drawRect(8, 8, 64, 64);

				r.click +=
					delegate
					{
						if (Clicked != null)
							Clicked();
					};

				r.AttachTo(this);
			}


			public event Action MyLoaded
			{
				add
				{
					value();
				}
				remove
				{

				}
			}

			public void Special1(IUltraData1 a, IUltraData1 b)
			{

			}
		}

		public UltraApplication(IHTMLElement e)
		{
			//Native.Window.onbeforeunload +=
			//    ee =>
			//    {
			//        var a = Native.Document.getElementsByTagName("embed");

			//        foreach (var item in a)
			//        {
			//            item.Orphanize();
			//        }

			//    };

			// we are attaching to the DOM now after onload event
			// bootstrap code was generated by jsc.meta and is using ScriptCoreLib

			{
				var x = new IHTMLButton("create UltraSprite");

				x.AttachToDocument();

				x.onclick +=
					delegate
					{
						var o = new UltraSprite();

						{
							var n = new IHTMLButton("AddShape1 red");

							n.onclick +=
								delegate
								{
									//o.AddShape2 = "";
									o.AddShape1("red");

								};

							n.AttachToDocument();
						}


						{
							var n = new IHTMLButton("AddShape1 green");

							n.onclick +=
								delegate
								{
									//o.AddShape2 = "";
									o.AddShape1("green");

								};

							n.AttachToDocument();
						}

						o.AttachSpriteToDocument();
					};
			}

			
			{
				var x = new IHTMLButton("create UltraApplet");

				x.AttachToDocument();

				x.onclick +=
					delegate
					{
						x.style.color = JSColor.Red;


						var o = new UltraApplet();
						// why isn't it loading??

						// adding new method means you need to restart JVM
						o.MyLoaded +=
							delegate
							{
								x.style.color = JSColor.Blue;

								// it better be loaded by now!!
								//o.MessageStatusOnClick();


								o.Clicked +=
									delegate
									{
										x.style.color = JSColor.Yellow;
									};
							};

				
						o.AttachAppletToDocument();
					};
			}



		}


	}
}
